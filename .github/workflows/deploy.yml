name: Deploy Frontend

on:
  push:
    branches: main 
  workflow_dispatch:

env:
  FRONTEND_IMAGE: millionmulugeta/frontend
  DOCKER_TAG: latest
  BUILD_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Build Frontend
    - name: Build and push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./
        push: true
        tags: ${{ env.FRONTEND_IMAGE }}:${{ env.DOCKER_TAG }},${{ env.FRONTEND_IMAGE }}:${{ env.BUILD_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          NODE_ENV=production

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        script: |
          # Navigate to frontend directory
          cd ~/mrbeas/services/frontend
          
          # Create backup of current frontend
          echo "Creating backup of current frontend..."
          if [ -d "frontend_backup" ]; then
            rm -rf frontend_backup
          fi
          cp -r . frontend_backup
          
          # Pull the latest frontend image
          echo "Pulling latest frontend Docker image..."
          docker pull ${{ env.FRONTEND_IMAGE }}:${{ env.DOCKER_TAG }}
          
          # Stop existing frontend container
          echo "Stopping existing frontend container..."
          docker-compose down --timeout 30
          
          # Start new frontend container
          echo "Starting new frontend container..."
          docker-compose up -d
          
          # Wait for container to start
          echo "Waiting for frontend container to start..."
          sleep 15
          
          # Check container status
          echo "Frontend Container Status:"
          docker-compose ps
          
          # Health check
          echo "Running frontend health check..."
          
          # Check Frontend
          if curl -f -s http://localhost:5000 > /dev/null; then
            echo "Frontend health check passed"
          else
            echo "Frontend health check failed"
          fi
          
          # Show recent logs
          echo "Recent frontend logs:"
          docker logs frontend --tail 10 || echo "No logs available for frontend"
          
          # Check if container is running
          FRONTEND_CONTAINER=$(docker-compose ps -q frontend)
          
          if [ -n "$FRONTEND_CONTAINER" ]; then
            echo "Frontend deployment successful! Container is running."
            echo "Frontend available at: http://localhost:5000"
            
            # Clean up old backup if deployment successful
            echo "Cleaning up old backup..."
            rm -rf frontend_backup
          else
            echo "Frontend deployment failed! Frontend container is not running."
            echo "Rolling back to previous frontend..."
            rm -rf ./*
            cp -r frontend_backup/* .
            docker-compose up -d
            exit 1
          fi

    - name: Notify deployment status
      if: always()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          Frontend Deployment
          
          Repository: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Status: ${{ job.status }}
          
          Image Built:
          - Frontend: ${{ env.FRONTEND_IMAGE }}:${{ env.DOCKER_TAG }}
          
          Server: ${{ secrets.SERVER_IP }}
          Path: ~/mrbeas/services/frontend
          
          ${{ job.status == 'success' && 'Frontend deployment successful!' || 'Frontend deployment failed! Check logs for details.' }} 